version: '2'

services:
  ## MySQL database shared with tomcat containers.
  # db_uc:
  #   image: mysql:5.7
  #   # build: ./mysql/
  #   restart: always
  #   #在主机上绑定端口和docker容器通信
  #   ports:
  #     - "13306:3306"
  #   environment:
  #     MYSQL_DATABASE: db_uc
  #     MYSQL_USER: apps
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_PASSWORD: Sample09X#
  #   volumes:
  #     - "./db_uc/data:/var/lib/mysql"
  #     - "./db_uc/conf/my.cnf:/etc/my.cnf"
  #     - "./db_uc/init:/docker-entrypoint-initdb.d/"

  # ## MySQL database shared with tomcat containers.
  # db_project:
  #   image: mysql:5.7
  #   # build: ./mysql/
  #   restart: always
  #   #在主机上绑定端口和docker容器通信
  #   ports:
  #     - "13307:3306"
  #   environment:
  #     MYSQL_DATABASE: db_project
  #     MYSQL_USER: apps
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_PASSWORD: Sample09X#
  #   volumes:
  #     - "./db_project/data:/var/lib/mysql"
  #     - "./db_project/conf/my.cnf:/etc/my.cnf"
  #     - "./db_project/init:/docker-entrypoint-initdb.d/"

  # ## MySQL database shared with tomcat containers.
  # db_plat:
  #   image: mysql:5.7
  #   # build: ./mysql/
  #   restart: always
  #   #在主机上绑定端口和docker容器通信
  #   ports:
  #     - "13308:3306"
  #   environment:
  #     MYSQL_DATABASE: db_plat
  #     MYSQL_USER: apps
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_PASSWORD: Sample09X#
  #   volumes:
  #     - "./db_plat/data:/var/lib/mysql"
  #     - "./db_plat/conf/my.cnf:/etc/my.cnf"
  #     - "./db_plat/init:/docker-entrypoint-initdb.d/"

  # ## MySQL database shared with tomcat containers.
  # db_charge:
  #   image: mysql:5.7
  #   # build: ./mysql/
  #   restart: always
  #   #在主机上绑定端口和docker容器通信
  #   ports:
  #     - "13309:3306"
  #   environment:
  #     MYSQL_DATABASE: db_charge
  #     MYSQL_USER: apps
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_PASSWORD: Sample09X#
  #   volumes:
  #     - "./db_charge/data:/var/lib/mysql"
  #     - "./db_charge/conf/my.cnf:/etc/my.cnf"
  #     - "./db_charge/init:/docker-entrypoint-initdb.d/"

  # ## MySQL database shared with tomcat containers.
  # db_quartz:
  #   image: mysql:5.7
  #   # build: ./mysql/
  #   restart: always
  #   #在主机上绑定端口和docker容器通信
  #   ports:
  #     - "13310:3306"
  #   environment:
  #     MYSQL_DATABASE: db_quartz
  #     MYSQL_USER: apps
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_PASSWORD: Sample09X#
  #   volumes:
  #     - "./db_quartz/data:/var/lib/mysql"
  #     - "./db_quartz/conf/my.cnf:/etc/my.cnf"
  #     - "./db_quartz/init:/docker-entrypoint-initdb.d/"



  ## MySQL database shared with tomcat containers.
  mongodb:
    image: mongo:3.6
    restart: always
    ports:
      - "17017:27017"
    #在主机上绑定端口和docker容器通信
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: Sample09X#
    #volumes:
    #  - ./mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro


  ## MySQL database shared with tomcat containers.
  mysql:
    image: mysql:5.7
    # build: ./mysql/
    restart: always
    #在主机上绑定端口和docker容器通信
    ports:
      - "13310:3306"
    environment:
      MYSQL_DATABASE: db_project
      MYSQL_USER: apps
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_PASSWORD: Sample09X#
    volumes:
      - "./mysql/data:/var/lib/mysql"
      - "./mysql/conf/my.cnf:/etc/my.cnf"
      - "./mysql/init:/sql"


  ## redis 服务
  redis:
    build: ./redis/
    restart: always
    # ports:
    #   - "12181:2181"

  ## memcached 服务
  memcached:
    build: ./memcached/
    restart: always
    # ports:
    #   - "12181:2181"

  ## zookeeper 服务
  zookeeper:
    build: ./zookeeper/
    restart: always
    ports:
      - "12181:2181"

  # dev-id:
  #   # image: dev/id
  #   build: ./id-service/
  #   depends_on:
  #     - redis
  #     - memcached
  #     - zookeeper
  #   restart: always
  #   environment:
  #     - ZOOKEEPER_HOST=zookeeper:2181
  #     - ZOOKEEPER_GROUP=/apps/config
  #     - ZOOKEEPER_VERSION=1.0.002
  #   command: java -jar /app-commons-provider-1.0-SNAPSHOT/app-commons-provider-1.0-SNAPSHOT.jar

  dev-id-web:
    image: apps/tomcat
    ports:
      - "18080:8080"
    depends_on:
      - redis
      - memcached
      - zookeeper
      - mysql
      - mongodb
    restart: always
    environment:
      - ZOOKEEPER_HOST=zookeeper:2181
      - ZOOKEEPER_GROUP=/apps/config
      - ZOOKEEPER_VERSION=1.0.002
    # volumes:
    #  - "./tomcat-node/init:/init"
    command: "sh /init.sh"


  # tomcat_01:
  #   build: ./tomcat-node/
  #   # ports:
  #   #   - "10080:80"
  #   depends_on:
  #     - mysql
  #     - zookeeper
  #     # - rabbit_01
  #     # - rabbit_02
  #     # - rabbit_03
  #   restart: always
    # command: /usr/local/server/openresty/nginx/sbin/nginx && while true;do sleep 60;done

  # tomcat_02:
  #   build: ./tomcat-node/
  #   # ports:
  #   #   - "10080:80"
  #   # depends_on:
  #   #   - mysql
  #     # - rabbit_01
  #     # - rabbit_02
  #     # - rabbit_03
  #   restart: always
  #   # command: /usr/local/server/openresty/nginx/sbin/nginx && while true;do sleep 60;done
  #
  # nginx:
  #   build: ./nginx-node/
  #   ports:
  #     - "10080:80"
  #   links:
  #     - tomcat_01
  #     - tomcat_02
    # restart: always
    # command: /usr/local/server/openresty/nginx/sbin/nginx && while true;do sleep 60;done
